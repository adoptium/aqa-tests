<?xml version='1.0' encoding='UTF-8'?>
<!--
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
-->
<playlist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../TKG/resources/playlist.xsd">
	<include>../jck.mk</include>
	<test>
		<testCaseName>jckcompiler_custom</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(GEN_JTB_GENERIC) testsuite=COMPILER tests="$(JCKCOMPILER_CUSTOM_TARGET)" isCustomTarget="isCustomTarget"; \
		$(EXEC_COMPILER_TEST); \
		$(TEST_STATUS); \
		$(GEN_SUMMARY_GENERIC) testsuite=COMPILER tests="$(JCKCOMPILER_CUSTOM_TARGET)" isCustomTarget="isCustomTarget"
		</command>
		<disables>
			<disable>
				<comment>Temp exclude for Jul_2025 release, if testcases fail, auto-reruns will fail</comment>
				<impl>hotspot</impl>
			</disable>
		</disables>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-api-java_rmi</testCaseName>
		<disables>
			<disable>
				<comment>Disabled on all platforms and Java levels due to backlog/issues/559. To be run manually by CR team</comment>
				<impl>ibm</impl>
			</disable>
			<disable>
				<comment>Disabled on all platforms and Java levels due to backlog/issues/559. To be run manually by CR team</comment>
				<impl>openj9</impl>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(GEN_JTB_GENERIC) tests=api/java_rmi testsuite=COMPILER; \
		$(EXEC_COMPILER_TEST); \
		$(TEST_STATUS); \
		$(GEN_SUMMARY_GENERIC) tests=api/java_rmi testsuite=COMPILER
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<versions>
			<version>8</version>
			<version>11</version>
		</versions>
	</test>
	<test>
		<testCaseName>jck-compiler-api-javax_annotation</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(GEN_JTB_GENERIC) tests=api/javax_annotation testsuite=COMPILER; \
		$(EXEC_COMPILER_TEST); \
		$(TEST_STATUS); \
		$(GEN_SUMMARY_GENERIC) tests=api/javax_annotation testsuite=COMPILER
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-api-javax_lang</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(GEN_JTB_GENERIC) tests=api/javax_lang testsuite=COMPILER; \
		$(EXEC_COMPILER_TEST); \
		$(TEST_STATUS); \
		$(GEN_SUMMARY_GENERIC) tests=api/javax_lang testsuite=COMPILER
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-api-javax_tools</testCaseName>
		<disables>
			<disable>
				<comment>Temporarily disabled on z/OS for backlog/issues/669</comment>
				<platform>.*zos.*</platform>
				<impl>ibm</impl>
				<version>11</version>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(GEN_JTB_GENERIC) tests=api/javax_tools testsuite=COMPILER; \
		$(EXEC_COMPILER_TEST); \
		$(TEST_STATUS); \
		$(GEN_SUMMARY_GENERIC) tests=api/javax_tools testsuite=COMPILER
		</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-api-signaturetest</testCaseName>
		<disables>
			<disable>
				<comment>Temporarily disabled on aix on JDK8 for test setup issue: backlog/issues/506</comment>
				<platform>ppc64_aix</platform>
				<version>8</version>
				<impl>openj9</impl>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(GEN_JTB_GENERIC) tests=api/signaturetest testsuite=COMPILER; \
		$(EXEC_COMPILER_TEST); \
		$(TEST_STATUS); \
		$(GEN_SUMMARY_GENERIC) tests=api/signaturetest testsuite=COMPILER
		</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-api-java_rmi_multijvm</testCaseName>
		<disables>
			<disable>
				<comment>Disabled on all platforms and Java levels due to backlog/issues/559. To be run manually by CR team</comment>
				<impl>ibm</impl>
			</disable>
			<disable>
				<comment>Disabled on all platforms and Java levels due to backlog/issues/559. To be run manually by CR team</comment>
				<impl>openj9</impl>
			</disable>
			<disable>
				<comment>Disabled temporarily in multijvm mode</comment>
				<impl>hotspot</impl>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(GEN_JTB) tests=api/java_rmi testsuite=COMPILER$(USEQ); \
		$(START_MULTI_JVM_COMP_TEST); \
		$(TEST_STATUS); \
		$(GEN_SUMMARY) tests=api/java_rmi testsuite=COMPILER
		</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<versions>
			<version>8</version>
			<version>11</version>
		</versions>
	</test>
	<test>
		<testCaseName>jck-compiler-api-javax_annotation_multijvm</testCaseName>
		<disables>
			<disable>
				<comment>Disabled temporarily in multijvm mode</comment>
				<impl>hotspot</impl>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(GEN_JTB) tests=api/javax_annotation testsuite=COMPILER$(USEQ); \
		$(START_MULTI_JVM_COMP_TEST); \
		$(TEST_STATUS); \
		$(GEN_SUMMARY) tests=api/javax_annotation testsuite=COMPILER
		</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-api-javax_lang_multijvm</testCaseName>
		<disables>
			<disable>
				<comment>Disabled temporarily in multijvm mode</comment>
				<impl>hotspot</impl>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(GEN_JTB) tests=api/javax_lang testsuite=COMPILER$(USEQ); \
		$(START_MULTI_JVM_COMP_TEST); \
		$(TEST_STATUS); \
		$(GEN_SUMMARY) tests=api/javax_lang testsuite=COMPILER
		</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-api-javax_tools_multijvm</testCaseName>
		<disables>
			<disable>
				<comment>Temporarily disabled on z/OS for backlog/issues/669</comment>
				<platform>.*zos.*</platform>
				<impl>ibm</impl>
				<version>11</version>
			</disable>
			<disable>
				<comment>Disabled temporarily in multijvm mode</comment>
				<impl>hotspot</impl>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(GEN_JTB) tests=api/javax_tools testsuite=COMPILER$(USEQ); \
		$(START_MULTI_JVM_COMP_TEST); \
		$(TEST_STATUS); \
		$(GEN_SUMMARY) tests=api/javax_tools testsuite=COMPILER
		</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-api-signaturetest_multijvm</testCaseName>
		<disables>
			<disable>
				<comment>Temporarily disabled on aix on JDK8 for test setup issue: backlog/issues/506</comment>
				<platform>ppc64_aix</platform>
				<version>8</version>
				<impl>openj9</impl>
			</disable>
			<disable>
				<comment>Disabled temporarily in multijvm mode</comment>
				<impl>hotspot</impl>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(GEN_JTB) tests=api/signaturetest testsuite=COMPILER$(USEQ); \
		$(START_MULTI_JVM_COMP_TEST); \
		$(TEST_STATUS); \
		$(GEN_SUMMARY) tests=api/signaturetest testsuite=COMPILER
		</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
</playlist>
