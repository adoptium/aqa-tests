<?xml version='1.0' encoding='UTF-8'?>
<!--
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
-->
<playlist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../TKG/resources/playlist.xsd">
	<test>
		<testCaseName>CryptoTests</testCaseName>
		<disables>
			<disable>
				<comment>https://github.com/eclipse-openj9/openj9/issues/16712</comment>
				<version>19+</version>
				<impl>openj9</impl>
			</disable>
			<disable>
				<comment>https://github.com/eclipse-openj9/openj9/issues/16710</comment>
				<platform>.*windows</platform>
				<impl>openj9</impl>
			</disable>
			<disable>
				<comment>https://github.com/eclipse-openj9/openj9/issues/19164</comment>
				<platform>(aarch64_mac|x86-64_mac|s390x_linux).*</platform>
				<impl>openj9</impl>
			</disable>
			<disable>
				<comment>https://github.com/adoptium/aqa-tests/issues/4336</comment>
				<platform>.*solaris</platform>
			</disable>
			<disable>
				<comment>This target is for those using GH actions or the Jenkins jtreg-plugin. The run.sh script provides extra functionality, tarring of results, downloading of bespoke jtreg.jar from a particular untagged commit SHA that is not yet upstreamed to a release version of jtreg that is used to see complete output in jtr.xml files. In addition, it simplifies enable/disable of kerberos-based tests which needs remote, pre-set KDC.
				</comment>
			</disable>
		</disables>
		<command>
			export JTREG_HOME="$(TEST_RESROOT)$(D)jtreg" ; \
			if [ "x${SKIP_AGENT_TESTS}" = "x" ] ; then export SKIP_AGENT_TESTS=1 ; fi ; \
			$(TEST_ROOT)$(D)functional$(D)security$(D)Crypto$(D)CryptoTest$(D)run.sh "$(TEST_JDK_HOME)" ; $(TEST_STATUS)
		</command>
		<features>
			<feature>FIPS140_2:nonapplicable</feature>
		</features>
		<impls>
			<impl>openj9</impl>
			<impl>hotspot</impl>
		</impls>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
	</test>
	<test>
		<testCaseName>CryptoTests_jtreg</testCaseName>
		<disables>
			<disable>
				<comment>https://github.com/eclipse-openj9/openj9/issues/16712</comment>
				<version>19+</version>
				<impl>openj9</impl>
			</disable>
			<disable>
				<comment>https://github.com/eclipse-openj9/openj9/issues/16712</comment>
				<version>21+</version>
				<impl>ibm</impl>
			</disable>
			<disable>
				<comment>https://github.com/eclipse-openj9/openj9/issues/16710</comment>
				<platform>.*windows</platform>
				<impl>openj9</impl>
			</disable>
			<disable>
				<comment>https://github.com/adoptium/aqa-tests/issues/4336</comment>
				<platform>.*solaris</platform>
			</disable>
		</disables>
		<command>$(JAVA_COMMAND) -Xmx512m -jar $(Q)$(TEST_RESROOT)$(D)jtreg$(D)lib$(D)jtreg.jar$(Q) \
		-a -xml -v:fail,error,time,nopass,summary -Dcryptotests.skipAgentTests=1 -timeoutFactor:2 \
		-w $(Q)$(REPORTDIR)$(D)work$(Q) \
		-r $(Q)$(REPORTDIR)$(D)report$(Q) \
		-jdk:$(Q)$(TEST_JDK_HOME)$(Q) \
		$(Q)$(TEST_ROOT)$(D)functional$(D)security$(D)Crypto$(D)CryptoTest$(Q); \
		$(TEST_STATUS)</command>
		<features>
			<feature>FIPS140_2:nonapplicable</feature>
		</features>
		<impls>
			<impl>openj9</impl>
			<impl>hotspot</impl>
		</impls>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
	</test>
</playlist>
