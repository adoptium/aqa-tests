<?xml version="1.0"?>

<!--
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
-->

<project name="Dacapo suite" default="build" basedir=".">
	<taskdef resource="net/sf/antcontrib/antlib.xml" />
	<description>Dacapo Suite</description>

	<!-- Set global properties for this build -->
	<property name="DEST" value="${BUILD_ROOT}/perf/dacapo" />
	<property name="SRC" location="." />
  <property name="DACAPO_DIR_NAME" value="dacapo-23.11-MR2-chopin-minimal"/>
  
  <!-- Leverage getDependencies for dacapo zip file-->
  <!-- <property name="LIB" value="dacapo"/> -->
  <property name="LIB" value="maven"/>
	<import file="${TEST_ROOT}/TKG/scripts/getDependencies.xml"/>
  <target name="compile" depends="getDependentLibs" description="Fetching dependencies and test code." />
  <target name="get_zip" depends="compile" description="Fetching zip file from dependencies">
		<copy todir="${SRC}">
			<!-- <fileset dir="${LIB_DIR}/" includes="${DACAPO_DIR_NAME}.zip"/> -->
      <fileset dir="${LIB_DIR}/" includes="apache-maven-bin.tar.gz" />
		</copy>
	</target>

  <!-- sanity check -->
  <!-- <echo message="dacapo should have been fetched via getDependencies"/> -->
  <echo message="maven should have been fetched via getDependencies"/>
  <echo message="=== Contents of ${SRC} ===" />
  <exec executable="ls" dir="${SRC}">
    <arg value="-la"/>
  </exec>
		
	<target name="init">
		<mkdir dir="${DEST}" />
	</target>  

	<target name="getDacapoSuite" depends="init, compile, get_zip">
		<var name="FILE_NAME" value="dacapo.jar"/>
    <var name="DIR_NAME" value="dacapo"/>
		<if>
			<available file="${FILE_NAME}" type="file" />
			<then>
				<echo message="${FILE_NAME} exists. Hence, not downloading it." />
			</then>
			<else>
				<!-- <var name="curl_options" value="-Lks -C - https://download.dacapobench.org/chopin/${DACAPO_DIR_NAME}.zip -o ${ZIP_FILE_NAME}"/>
				<retry retrycount="3">
					<sequential>
						<echo message="curl ${curl_options}" />
						<exec executable="curl" failonerror="true">
							<arg line="${curl_options}" />
						</exec>  
					</sequential>
				</retry> -->

				<!-- Extract the entire ZIP file directly to source directory -->
				<echo message="Extracting all contents from ${DACAPO_DIR_NAME}.zip to ${SRC}" />
				<unzip src="${DACAPO_DIR_NAME}.zip" dest="${SRC}"/>

				<!-- Rename the main JAR to the expected name -->
				<echo message="Renaming ${DACAPO_DIR_NAME}.jar to ${FILE_NAME}" />
				<move file="${DACAPO_DIR_NAME}.jar" tofile="${FILE_NAME}" failonerror="true"/>

				<!-- Rename the directory from DACAPO_DIR_NAME to DIR_NAME -->
				<echo message="Renaming directory ${DACAPO_DIR_NAME} to ${DIR_NAME}" />
				<move todir="${DIR_NAME}" failonerror="true">
					<fileset dir="${DACAPO_DIR_NAME}"/>
				</move>
        
				<delete dir="${DACAPO_DIR_NAME}"/>
				<delete file="${DACAPO_DIR_NAME}.zip"/>
			</else>
		</if>
	</target>

	<target name="dist" depends="getDacapoSuite" description="generate the distribution">
		<copy todir="${DEST}">
			<fileset dir="${SRC}"/>
		</copy>
	</target>

	<target name="build">
		<antcall target="dist" inheritall="true" />
	</target>
</project>
