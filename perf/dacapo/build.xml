<?xml version="1.0"?>

<!--
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
-->

<project name="Dacapo suite" default="build" basedir=".">
	<taskdef resource="net/sf/antcontrib/antlib.xml" />
	<description>Dacapo Suite</description>

	<!-- Set global properties for this build -->
	<property name="DEST" value="${BUILD_ROOT}/perf/dacapo" />
	<property name="SRC" location="." />
		
	<target name="init">
		<mkdir dir="${DEST}" />
	</target>

	<target name="getDacapoSuite" depends="init">
		<var name="FILE_NAME" value="dacapo.jar"/>
    <var name="DIR_NAME" value="dacapo"/>
		<var name="ZIP_FILE_NAME" value="dacapo-23.11-MR2-chopin.zip"/>
		<var name="JAR_FILE_NAME" value="dacapo-23.11-MR2-chopin.jar"/>
    <var name="DACAPO_DIR_NAME" value="dacapo-23.11-MR2-chopin"/>
		<if>
			<available file="${FILE_NAME}" type="file" />
			<then>
				<echo message="${FILE_NAME} exists. Hence, not downloading it." />
			</then>
			<else>
				<var name="curl_options" value="-Lks -C - https://download.dacapobench.org/chopin/dacapo-23.11-MR2-chopin.zip -o ${ZIP_FILE_NAME}"/>
				<retry retrycount="3">
					<sequential>
						<echo message="curl ${curl_options}" />
						<exec executable="curl" failonerror="true">
							<arg line="${curl_options}" />
						</exec>
					</sequential>
				</retry>
				<!-- Extract the entire ZIP file -->
				<echo message="Extracting all contents from ${ZIP_FILE_NAME}" />
				<unzip src="${ZIP_FILE_NAME}" dest="${SRC}"/>

				<!-- Acquire decapo.jar and decapo directory -->
				<move file="${JAR_FILE_NAME}" tofile="${FILE_NAME}" overwrite="true" failonerror="true"/>
        <move dir="${DECAPO_DIR_NAME}" todir="${DIR_NAME}" overwrite = "true" failonerror="true"/>

        <target name="list-dirs">
          <echo message="Directories inside SRC:" />
            <foreach item="Folder" in="${SRC}" property="dir">
              <in>
                <items>
                  <include name="*" />
                </items>
              </in>
              <do>
                <echo message="${path::get-file-name(dir)}" />
              </do>
            </foreach>
        </target>

        <target name="list-dirs">
          <echo message="Directories inside SRC/dacapo:" />
            <foreach item="Folder" in="${SRC}/${DIR_NAME}" property="dir">
              <in>
                <items>
                  <include name="*" />
                </items>
              </in>
              <do>
                <echo message="${path::get-file-name(dir)}" />
              </do>
            </foreach>
        </target>

				<delete file="${ZIP_FILE_NAME}"/>
			</else>
		</if>
	</target>
	
	<target name="dist" depends="getDacapoSuite" description="generate the distribution">
		<copy todir="${DEST}">
			<fileset dir="${SRC}"/>
		</copy>
	</target>

	<target name="build">
		<antcall target="dist" inheritall="true" />
	</target>
</project>
