<?xml version='1.0' encoding='UTF-8'?>
<playlist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../TKG/resources/playlist.xsd">
	<include>../system.mk</include>
	<!-- 
	Special target to get machine information. This target is in each subfolder playlist.xml.
	To avoid test target duplication, this belongs to sanity, extended and special. Regular test should only belong to one level -->
	<test>
		<testCaseName>MachineInfo</testCaseName>
		<command>$(JAVA_COMMAND) -cp $(JVM_TEST_ROOT)$(D)TKG$(D)bin$(D)TestKitGen.jar org.openj9.envInfo.EnvDetector MachineInfo; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
			<level>extended</level>
			<level>special</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>system_custom</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -java-args-execute-initial=$(Q)$(ADD_OPENS_CMD)$(Q) $(CUSTOM_TARGET);\
	$(TEST_STATUS)</command>
		<levels>
			<level>special</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>MiniMix_5m</testCaseName>
		<disables>
			<disable>
				<comment>https://github.com/adoptium/aqa-tests/issues/3819</comment>
				<version>11+</version>
				<impl>hotspot</impl>
				<platform>ppc64_aix|s390x_linux|ppc64le_linux</platform>
			</disable>
			<disable>
				<comment>https://github.com/adoptium/aqa-tests/issues/4976</comment>
				<impl>hotspot</impl>
				<platform>riscv64_linux</platform>
			</disable>
			<disable>
				<comment>https://github.com/adoptium/aqa-tests/issues/5673</comment>
				<version>8</version>
				<impl>hotspot</impl>
				<platform>.*windows.*</platform>
			</disable>
		</disables>
		<variations>
			<variation>Mode150</variation>
			<variation>Mode650</variation>
			<variation>Mode1000</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=MixedLoadTest -test-args=$(Q)timeLimit=5m$(Q) -java-args-execute-initial=$(Q)$(ADD_OPENS_CMD)$(Q);\
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>MiniMix_10m</testCaseName>
		<disables>
			<disable>
				<comment>https://github.com/adoptium/aqa-tests/issues/3819</comment>
				<version>11+</version>
				<impl>hotspot</impl>
				<platform>ppc64_aix|s390x_linux|ppc64le_linux</platform>
			</disable>
			<disable>
				<comment>https://github.com/adoptium/aqa-tests/issues/4976</comment>
				<impl>hotspot</impl>
				<platform>riscv64_linux</platform>
			</disable>
			<disable>
				<comment>https://github.com/adoptium/aqa-tests/issues/5673</comment>
				<version>8</version>
				<impl>hotspot</impl>
				<platform>.*windows.*</platform>
			</disable>
		</disables>
		<variations>
			<variation>Mode150</variation>
			<variation>Mode650</variation>
			<variation>Mode1000</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=MixedLoadTest -test-args=$(Q)timeLimit=10m$(Q) -java-args-execute-initial=$(Q)$(ADD_OPENS_CMD)$(Q);\
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>MiniMix_aot_5m</testCaseName>
		<disables>
			<disable>
				<comment>eclipse-openj9/openj9/issues/14165ï¼Œhttps://github.com/adoptium/aqa-tests/issues/3230</comment>
				<platform>x86-32_windows</platform>
			</disable>
			<disable>
				<comment>https://github.com/adoptium/aqa-tests/issues/3819</comment>
				<platform>ppc64_aix|ppc64le_linux</platform>
				<impl>hotspot</impl>
				<version>17+</version>
			</disable>
			<disable>
				<comment>https://github.com/adoptium/aqa-tests/issues/4976</comment>
				<impl>hotspot</impl>
				<platform>riscv64_linux</platform>
			</disable>
			<disable>
				<comment>https://github.com/adoptium/aqa-tests/issues/5673</comment>
				<version>8</version>
				<impl>hotspot</impl>
				<platform>.*windows.*</platform>
			</disable>
		</disables>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=MixedLoadTest -debug-generation -java-debug-args=$(Q)-Xmx3g -Xms3g$(Q) -test-args=$(Q)timeLimit=5m$(Q) -java-args-execute-initial=$(Q)$(ADD_OPENS_CMD) -Xmx3g -Xms3g$(Q); \
	$(SYSTEMTEST_CMD_TEMPLATE) -test=MixedLoadTest -test-args=$(Q)timeLimit=5m$(Q) -java-args-execute-initial=$(Q)$(ADD_OPENS_CMD) -Xmx2g -Xms2g$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>MiniMix_3h</testCaseName>
		<variations>
			<variation>Mode551</variation>
			<variation>Mode110-CS</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=MixedLoadTest -test-args=$(Q)timeLimit=3h$(Q) -java-args-execute-initial=$(Q)$(ADD_OPENS_CMD)$(Q);\
	$(TEST_STATUS)</command>
		<levels>
			<level>special</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>ClassLoadingTest_5m</testCaseName>
		<variations>
			<variation>Mode150</variation>
			<variation>Mode650</variation>
			<variation>Mode1000</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=ClassloadingLoadTest -test-args=$(Q)timeLimit=5m$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>ClassLoadingTest_special_5m</testCaseName>
		<variations>
			<variation>Mode101</variation>
			<variation>Mode103</variation>
			<variation>Mode104</variation>
			<variation>Mode107</variation>
			<variation>Mode112</variation>
			<variation>Mode113</variation>
			<variation>Mode121</variation>
			<variation>Mode122</variation>
			<variation>Mode145</variation>
			<variation>Mode187</variation>
			<variation>Mode301</variation>
			<variation>Mode351</variation>
			<variation>Mode501</variation>
			<variation>Mode551</variation>
			<variation>Mode553</variation>
			<variation>Mode554</variation>
			<variation>Mode555</variation>
			<variation>Mode556</variation>
			<variation>Mode557</variation>
			<variation>Mode607</variation>
			<variation>Mode614</variation>
			<variation>Mode615</variation>
			<variation>Mode687</variation>
			<variation>Mode688</variation>
			<variation>Mode107-OSRG</variation>
			<variation>Mode110-OSRG</variation>
			<variation>Mode610-OSRG</variation>
			<variation>Mode612-OSRG</variation>
			<variation>Mode645</variation>
			<variation>-Xgcpolicy:gencon -Xgc:dynamicBreadthFirstScanOrdering</variation>
			<!--Note: -Xint modes Mode108, Mode109, Mode109-CS, Mode159, Mode159-CS, Mode550 should be run manually -->
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=ClassloadingLoadTest -test-args=$(Q)timeLimit=5m$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>special</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>ConcurrentLoadTest_5m</testCaseName>
		<disables>
			<disable>
				<comment>https://github.com/adoptium/aqa-tests/issues/3819</comment>
				<version>11+</version>
				<impl>hotspot</impl>
				<platform>ppc64_aix|s390x_linux|ppc64le_linux</platform>
			</disable>
			<disable>
				<comment>https://github.com/adoptium/aqa-tests/issues/4976</comment>
				<impl>hotspot</impl>
				<platform>riscv64_linux</platform>
			</disable>
		</disables>
		<variations>
			<variation>Mode150</variation>
			<variation>Mode650</variation>
			<variation>Mode1000</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=ConcurrentLoadTest -test-args=$(Q)timeLimit=5m$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<!-- Temporarily excluded from z/Os due to : jdk11-zos/issues/571-->
	<test>
		<testCaseName>DBBLoadTest_5m</testCaseName>
		<variations>
			<variation>Mode150</variation>
			<variation>Mode650</variation>
			<variation>Mode1000</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=DirectByteBufferLoadTest -test-args=$(Q)timeLimit=5m$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<platformRequirements>^os.zos</platformRequirements>
	</test>
	<test>
		<testCaseName>LangLoadTest_5m</testCaseName>
		<variations>
			<variation>Mode150</variation>
			<variation>Mode650</variation>
			<variation>Mode1000</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=LangLoadTest -test-args=$(Q)timeLimit=5m$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>LockingLoadTest</testCaseName>
		<variations>
			<variation>Mode150</variation>
			<variation>Mode650</variation>
			<variation>Mode1000</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=LockingLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<!-- Temporarily exclude from Linux aarch64 for: https://github.com/eclipse-openj9/openj9/issues/3065 -->
	<!-- Temporarily excluded from z/Os due to : jdk11-zos/issues/342-->
	<test>
		<testCaseName>NioLoadTest_5m</testCaseName>
		<variations>
			<variation>Mode150</variation>
			<variation>Mode650</variation>
			<variation>Mode1000</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=NioLoadTest -test-args=$(Q)timeLimit=5m$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<platformRequirements>^arch.arm,^os.zos</platformRequirements>
	</test>
	<test>
		<testCaseName>UtilLoadTest_5m</testCaseName>
		<variations>
			<variation>Mode150</variation>
			<variation>Mode650</variation>
			<variation>Mode1000</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=UtilLoadTest -test-args=$(Q)timeLimit=5m$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>HCRLateAttachWorkload</testCaseName>
		<variations>
			<variation>Mode150</variation>
			<variation>Mode650</variation>
			<variation>Mode1000</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=HCRLateAttachWorkload; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<versions>
			<version>8</version>
		</versions>
	</test>
	<test>
		<testCaseName>HCRLateAttachWorkload_previewEnabled</testCaseName>
		<disables>
			<disable>
				<comment>https://github.com/eclipse-openj9/openj9/issues/15250</comment>
				<impl>openj9</impl>
				<version>19+</version>
			</disable>
			<disable>
				<comment>https://github.com/eclipse-openj9/openj9/issues/15250</comment>
				<impl>ibm</impl>
				<version>21+</version>
			</disable>
			<disable>
				<comment>https://github.com/adoptium/aqa-systemtest/issues/479</comment>
				<impl>hotspot</impl>
				<version>19+</version>
			</disable>
		</disables>
		<variations>
			<variation>Mode150</variation>
			<variation>Mode650</variation>
			<variation>Mode1000</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -debug-generation=$(Q)true$(Q) -java-debug-args=$(Q)--enable-preview --add-exports java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED$(Q) -java-args-execute-initial=$(Q)--enable-preview --add-exports java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED$(Q) -test=HCRLateAttachWorkload; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<versions>
			<version>11+</version>
		</versions>
	</test>
	<test>
		<testCaseName>JdiTest</testCaseName>
		<disables>
			<disable>
				<comment>adoptium/aqa-systemtest/issues/63</comment>
			</disable>
		</disables>
		<variations>
			<variation>Mode150</variation>
			<variation>Mode650</variation>
			<variation>Mode1000</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=JdiTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>HeapHogLoadTest_5m</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -java-args-execute-initial=$(Q)-Xdisableexcessivegc$(Q) -test=HeapHogLoadTest -test-args=$(Q)timeLimit=5m$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>ObjectTreeLoadTest_5m</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -java-args-execute-initial=$(Q)-Xnoclassgc$(Q) -test=ObjectTreeLoadTest -test-args=$(Q)timeLimit=5m$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<!-- The tests below are added to test concurrent scavenge on z/OS, z/Linux, x/Linux and x/Windows using 64-bit OpenJ9 SDK -->
	<test>
		<testCaseName>ClassLoadingTest_CS_5m</testCaseName>
		<variations>
			<variation>-Xgcpolicy:gencon -Xgc:concurrentScavenge</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=ClassloadingLoadTest -test-args=$(Q)timeLimit=5m$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
		<platformRequirements>bits.64,^arch.arm</platformRequirements>
	</test>
</playlist>
