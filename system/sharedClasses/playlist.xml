<?xml version='1.0' encoding='UTF-8'?>
<playlist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../TKG/resources/playlist.xsd">
	<include>../system.mk</include>
	<!--
	We currently only run special.system in parallel mode and some subfolders do not have any system test in special level
	In order to save machine resources, exclude sharedClasses subfolder in parallel mode
	To enable it, please update excludes array in JenkinsfileBase
	-->
	<!--
	Special target to get machine information. This target is in each subfolder playlist.xml.
	To avoid test target duplication, this belongs to sanity, extended and special. Regular test should only belong to one level -->
	<test>
		<testCaseName>MachineInfo</testCaseName>
		<command>$(JAVA_COMMAND) -cp $(JVM_TEST_ROOT)$(D)TKG$(D)bin$(D)TestKitGen.jar org.openj9.envInfo.EnvDetector MachineInfo; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
			<level>extended</level>
			<level>special</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>SharedClassesAPI</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode610</variation>
		</variations>
		<command>if ! echo "$(PLATFORM)" | grep -q "win"; then export original_umask_val=`umask` $(AND_IF_SUCCESS) umask 0002 $(AND_IF_SUCCESS) echo umask set to `umask`; fi; \
	$(SYSTEMTEST_CMD_TEMPLATE) -test=SharedClassesAPI; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>SharedClassesWorkload</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=SharedClassesWorkload; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>SC_Softmx_Increase</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=SharedClassesWorkloadTest_Softmx_Increase; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>SC_Softmx_UpDown</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=SharedClassesWorkloadTest_Softmx_IncreaseDecrease; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>SC_Softmx_JitAot</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=SharedClassesWorkloadTest_Softmx_Increase_JitAot; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
		<platformRequirements>^os.linux</platformRequirements>
	</test>
	<test>
		<testCaseName>SC_Softmx_JitAot_Linux</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=SharedClassesWorkloadTest_Softmx_Increase_JitAot; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
		<platformRequirements>os.linux</platformRequirements>
	</test>
	<test>
		<testCaseName>SharedClasses.SCM01.SingleCL</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=SharedClasses -test-args=$(Q)sharedClassMode=SCM01,sharedClassTest=SingleCL$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>SharedClasses.SCM01.MultiCL</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=SharedClasses -test-args=$(Q)sharedClassMode=SCM01,sharedClassTest=MultiCL$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>SharedClasses.SCM01.MultiThread</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode610</variation>
		</variations>
		<!-- Some machines may have max user processes too low by default for this test
		 - e.g. see https://github.com/adoptium/infrastructure/issues/1851
		 The command is not relevant to Windows, and ulimit cannot be modified by the Jenkins users on osx.
		 Max user processes option is -u in bash, -p in dash (-p is pipe size in bash, so the validity of ulimit -u is used to set the correct option). -->
		<command>echo "$(PLATFORM)" | grep -q "osx\|win" || \
		{ MXP_FLAG=$$(test $$(ulimit -u 2>/dev/null) $(AND_IF_SUCCESS) echo "-u" || echo "-p"); REQD_MXP=2048; if [ ! "$$(ulimit $$MXP_FLAG)" = "unlimited" ] $(AND_IF_SUCCESS) [ ! $$(ulimit $$MXP_FLAG) -gt $$REQD_MXP ]; then echo Attempting to increase max user processes from $$(ulimit $$MXP_FLAG) to $$REQD_MXP; ulimit $$MXP_FLAG $$REQD_MXP; echo max user processes now $$(ulimit $$MXP_FLAG); fi; }; \
		$(SYSTEMTEST_CMD_TEMPLATE) -test=SharedClasses -test-args=$(Q)sharedClassMode=SCM01,sharedClassTest=MultiThread$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>SharedClasses.SCM01.MultiThreadMultiCL</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=SharedClasses -test-args=$(Q)sharedClassMode=SCM01,sharedClassTest=MultiThreadMultiCL$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>SharedClasses.SCM23.SingleCL</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=SharedClasses -test-args=$(Q)sharedClassMode=SCM23,sharedClassTest=SingleCL$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>SharedClasses.SCM23.MultiCL</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=SharedClasses -test-args=$(Q)sharedClassMode=SCM23,sharedClassTest=MultiCL$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>SharedClasses.SCM23.MultiThread</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode610</variation>
		</variations>
		<!-- Some machines may have max user processes too low by default for this test
		 - e.g. see https://github.com/adoptium/infrastructure/issues/1851
		 The command is not relevant to Windows, and ulimit cannot be modified by the Jenkins users on osx.
		 Max user processes option is -u in bash, -p in dash (-p is pipe size in bash, so the validity of ulimit -u is used to set the correct option). -->
		<command>echo "$(PLATFORM)" | grep -q "osx\|win" || \
		{ MXP_FLAG=$$(test $$(ulimit -u 2>/dev/null) $(AND_IF_SUCCESS) echo "-u" || echo "-p"); REQD_MXP=2048; if [ ! "$$(ulimit $$MXP_FLAG)" = "unlimited" ] $(AND_IF_SUCCESS) [ ! $$(ulimit $$MXP_FLAG) -gt $$REQD_MXP ]; then echo Attempting to increase max user processes from $$(ulimit $$MXP_FLAG) to $$REQD_MXP; ulimit $$MXP_FLAG $$REQD_MXP; echo max user processes now $$(ulimit $$MXP_FLAG); fi; }; \
		$(SYSTEMTEST_CMD_TEMPLATE) -test=SharedClasses -test-args=$(Q)sharedClassMode=SCM23,sharedClassTest=MultiThread$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>SharedClasses.SCM23.MultiThreadMultiCL</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=SharedClasses -test-args=$(Q)sharedClassMode=SCM23,sharedClassTest=MultiThreadMultiCL$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
</playlist>
